[{"/home/nikki/Documents/practice/react/udemy/react-practice/src/index.js":"1","/home/nikki/Documents/practice/react/udemy/react-practice/src/App.js":"2","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/Expenses.js":"3","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpenseItem.js":"4","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpenseDate.js":"5","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/UI/Card.js":"6","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/NewExpense/NewExpense.js":"7","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/NewExpense/ExpenseForm.js":"8","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpensesFilter.js":"9"},{"size":205,"mtime":1654206514143,"results":"10","hashOfConfig":"11"},{"size":1040,"mtime":1654457499541,"results":"12","hashOfConfig":"11"},{"size":1500,"mtime":1654538253669,"results":"13","hashOfConfig":"11"},{"size":720,"mtime":1654377134778,"results":"14","hashOfConfig":"11"},{"size":533,"mtime":1654208476226,"results":"15","hashOfConfig":"11"},{"size":240,"mtime":1654208462462,"results":"16","hashOfConfig":"11"},{"size":577,"mtime":1654456785220,"results":"17","hashOfConfig":"11"},{"size":3752,"mtime":1654456455389,"results":"18","hashOfConfig":"11"},{"size":885,"mtime":1654538303577,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19wzcrh",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nikki/Documents/practice/react/udemy/react-practice/src/index.js",[],["40","41"],"/home/nikki/Documents/practice/react/udemy/react-practice/src/App.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/Expenses.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpenseItem.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpenseDate.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/UI/Card.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/NewExpense/NewExpense.js",[],"/home/nikki/Documents/practice/react/udemy/react-practice/src/components/NewExpense/ExpenseForm.js",["42"],"import { title } from \"process\"\nimport React, { useState } from \"react\"\nimport \"./ExpenseForm.css\"\n\nconst ExpenseForm = (props) => {\n    // Using individual state slices\n    const [enteredTitle, setEnteredTitle] = useState(\"\")\n    const [enteredAmount, setEnteredAmount] = useState(\"\")\n    const [enteredDate, setEnteredDate] = useState(\"\")\n\n    // // Using one state object for all slices\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: \"\",\n    //     enteredAmount: \"\",\n    //     enteredDate: \"\"\n    // })\n\n    const titleChangeHandler = (event) => {\n        // console.log(\"e.title:\", event.target.value)\n        setEnteredTitle(event.target.value)\n\n        // // If you're going to use one state object, this is the correct format.\n        // // Use prevState as a function argument, to make sure you're receiving the correct and most recent value of state.\n        // setUserInput((prevState) => {\n        //     return { ...prevState, enteredTitle: event.target.value }\n        // })\n    }\n\n    const amountChangeHandler = (event) => {\n        // console.log(\"e.amt:\", event.target.value)\n        setEnteredAmount(event.target.value)\n    }\n\n    const dateChangeHandler = (event) => {\n        // console.log(\"e.date:\", event.target.value)\n        setEnteredDate(event.target.value)\n    }\n\n    const submitHandler = (event) => {\n        // Stop the browser from reloading the page and automatically sending the form data when the submit button is clicked, before we can do anything with it.\n        event.preventDefault()\n\n        // Combinme all the form data into an object (unnecessary if you've been using the state object all along instead of using multiple pieces of state)\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate),\n        }\n\n        // console.log(\"expenseData:\", expenseData)\n\n        props.onSaveExpenseData(expenseData)\n\n        // The advantage to individual pieces of state is that we can use two-way binding, not just listening to changes, but feeding the state back into the input via the form's value.\n        // When the form is submitted, we'll call the set state function to reset it back to the initial state (empty string in this case).\n        setEnteredTitle(\"\")\n        setEnteredAmount(\"\")\n        setEnteredDate(\"\")\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        value={enteredTitle}\n                        onChange={titleChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Amount</label>\n                    <input\n                        type=\"number\"\n                        value={enteredAmount}\n                        min=\"0.01\"\n                        step=\"0.01\"\n                        onChange={amountChangeHandler}\n                    />\n                </div>\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    <input\n                        type=\"date\"\n                        value={enteredDate}\n                        min=\"2019-01-01\"\n                        max=\"2022-12-31\"\n                        onChange={dateChangeHandler}\n                    />\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ExpenseForm\n","/home/nikki/Documents/practice/react/udemy/react-practice/src/components/Expenses/ExpensesFilter.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":10,"nodeType":"50","messageId":"51","endLine":1,"endColumn":15},{"ruleId":"48","severity":1,"message":"52","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":25},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'title' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]